-- ==================================================
-- SCRIPT: Criar Fluxo Karsten (TRANSA√á√ÉO √öNICA)
-- ==================================================
-- Descri√ß√£o: Fluxo completo com valida√ß√µes de cliente, fideliza√ß√£o e usu√°rio
-- Uso: Executar uma √∫nica vez para criar o fluxo
-- ==================================================

-- Configura√ß√µes do fluxo
SET @p_instance = 'develop';
SET @p_sector_id = 1;
SET @p_description = 'Fluxo Karsten - Valida√ß√£o completa de fideliza√ß√£o';

-- ===== IN√çCIO DA TRANSA√á√ÉO =====
START TRANSACTION;

-- ===== CRIAR FLUXO =====
INSERT INTO message_flows (instance, sector_id, name, description, created_at, updated_at)
VALUES (@p_instance, @p_sector_id, 'Karsten Flow', @p_description, NOW(), NOW());

SET @flow_id = LAST_INSERT_ID();

SELECT CONCAT('‚úÖ Fluxo criado com ID: ', @flow_id) as status;

-- ===== STEP 1: Verifica se tem customerId =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'CONDITION', 1,
     JSON_OBJECT(
       'field', 'contact.customerId',
       'operator', 'exists',
       'value', true,
       'onTrue', 2,
       'onFalse', 12
     ),
     NULL, NULL, TRUE,
     'Verifica se contato est√° vinculado a um cliente',
     NOW(), NOW());

SELECT '  ‚úì Step 1: Verifica customerId' as status;

-- ===== STEP 2: Busca dados do cliente e campanha =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'QUERY', 2,
     JSON_OBJECT(
       'query', 'SELECT c.CODIGO, c.NOME, c.TIPO_CLIENTE, cc.OPERADOR, cc.FIDELIZA, cc.TIPO_CAMPANHA FROM clientes c LEFT JOIN campanhas_clientes cc ON c.CODIGO = cc.CLIENTE WHERE c.CODIGO = ? ORDER BY cc.CODIGO DESC LIMIT 1',
       'params', JSON_ARRAY('${contact.customerId}'),
       'storeAs', 'customer',
       'single', true
     ),
     3, 12, TRUE,
     'Busca dados do cliente, fideliza√ß√£o e tipo de campanha',
     NOW(), NOW());

SELECT '  ‚úì Step 2: Busca dados do cliente' as status;

-- ===== STEP 3: Verifica se √© cliente inativo (INAT_A ou INAT_R) =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'CONDITION', 3,
     JSON_OBJECT(
       'field', 'customer.TIPO_CAMPANHA',
       'operator', 'in',
       'value', JSON_ARRAY('INAT_A', 'INAT_R'),
       'onTrue', 8,
       'onFalse', 4
     ),
     NULL, NULL, TRUE,
     'Verifica se cliente est√° em campanha de inativo',
     NOW(), NOW());

SELECT '  ‚úì Step 3: Verifica tipo de campanha (INAT)' as status;

-- ===== STEP 4: Verifica se tem operador fidelizado =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'CONDITION', 4,
     JSON_OBJECT(
       'field', 'customer.OPERADOR',
       'operator', 'exists',
       'value', true,
       'onTrue', 5,
       'onFalse', 13
     ),
     NULL, NULL, TRUE,
     'Verifica se cliente possui operador fidelizado',
     NOW(), NOW());

SELECT '  ‚úì Step 4: Verifica fideliza√ß√£o' as status;

-- ===== STEP 5: Verifica se operador √© REPRESENTANTE (-2) =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'CONDITION', 5,
     JSON_OBJECT(
       'field', 'customer.OPERADOR',
       'operator', 'equals',
       'value', -2,
       'onTrue', 9,
       'onFalse', 6
     ),
     NULL, NULL, TRUE,
     'Verifica se operador √© REPRESENTANTE (c√≥digo -2)',
     NOW(), NOW());

SELECT '  ‚úì Step 5: Verifica REPRESENTANTE (-2)' as status;

-- ===== STEP 6: Verifica se operador √© AGENDA PUBLICA (0) =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'CONDITION', 6,
     JSON_OBJECT(
       'field', 'customer.OPERADOR',
       'operator', 'equals',
       'value', 0,
       'onTrue', 10,
       'onFalse', 14
     ),
     NULL, NULL, TRUE,
     'Verifica se operador √© AGENDA P√öBLICA (c√≥digo 0)',
     NOW(), NOW());

SELECT '  ‚úì Step 6: Verifica AGENDA P√öBLICA (0)' as status;

-- ===== STEP 14: Busca dados do operador =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'QUERY', 14,
     JSON_OBJECT(
       'query', 'SELECT CODIGO, NOME, ATIVO, SETOR FROM operadores WHERE CODIGO = ?',
       'params', JSON_ARRAY('${customer.OPERADOR}'),
       'storeAs', 'operator',
       'single', true
     ),
     15, 11, TRUE,
     'Busca dados do operador fidelizado',
     NOW(), NOW());

SELECT '  ‚úì Step 14: Busca dados do operador' as status;

-- ===== STEP 15: Verifica se operador est√° ativo =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'CONDITION', 15,
     JSON_OBJECT(
       'field', 'operator.ATIVO',
       'operator', 'equals',
       'value', 'SIM',
       'onTrue', 7,
       'onFalse', 11
     ),
     NULL, NULL, TRUE,
     'Verifica se operador est√° ativo',
     NOW(), NOW());

SELECT '  ‚úì Step 15: Verifica se operador est√° ATIVO' as status;

-- ===== STEP 7: FINAL - Atribui para operador fidelizado =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'ASSIGN', 7,
     JSON_OBJECT(
       'userId', '${customer.OPERADOR}',
       'priority', 'HIGH',
       'systemMessage', '‚úÖ Cliente possui fideliza√ß√£o v√°lida. Atribuindo para operador habitual.\nüë§ Operador: ${operator.NOME} (${operator.CODIGO})\nüìã Cliente: ${customer.NOME} (${customer.CODIGO})'
     ),
     NULL, NULL, TRUE,
     'FINAL - Atribui para operador fidelizado ativo',
     NOW(), NOW());

SELECT '  ‚úì Step 7: FINAL - Atribui fidelizado' as status;

-- ===== STEP 8: FINAL - Cliente inativo =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'ASSIGN', 8,
     JSON_OBJECT(
       'userId', -1,
       'priority', 'NORMAL',
       'systemMessage', '‚ö†Ô∏è Cliente est√° INATIVO (campanha ${customer.TIPO_CAMPANHA}). Atribuindo para supervis√£o.\nüìã Cliente: ${customer.NOME} (${customer.CODIGO})'
     ),
     NULL, NULL, TRUE,
     'FINAL - Atribui para supervis√£o (cliente inativo)',
     NOW(), NOW());

SELECT '  ‚úì Step 8: FINAL - Cliente inativo' as status;

-- ===== STEP 9: FINAL - Representante =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'ASSIGN', 9,
     JSON_OBJECT(
       'userId', -1,
       'priority', 'NORMAL',
       'systemMessage', 'üëî Cliente √© de REPRESENTANTE. Atribuindo para supervis√£o.\nüìã Cliente: ${customer.NOME} (${customer.CODIGO})'
     ),
     NULL, NULL, TRUE,
     'FINAL - Atribui para supervis√£o (representante)',
     NOW(), NOW());

SELECT '  ‚úì Step 9: FINAL - Representante' as status;

-- ===== STEP 10: FINAL - Agenda p√∫blica =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'ASSIGN', 10,
     JSON_OBJECT(
       'userId', -1,
       'priority', 'NORMAL',
       'systemMessage', 'üìÖ Cliente √© de AGENDA P√öBLICA. Atribuindo para supervis√£o.\nüìã Cliente: ${customer.NOME} (${customer.CODIGO})'
     ),
     NULL, NULL, TRUE,
     'FINAL - Atribui para supervis√£o (agenda p√∫blica)',
     NOW(), NOW());

SELECT '  ‚úì Step 10: FINAL - Agenda p√∫blica' as status;

-- ===== STEP 11: FINAL - Operador inativo =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'ASSIGN', 11,
     JSON_OBJECT(
       'userId', -1,
       'priority', 'NORMAL',
       'systemMessage', '‚è∏Ô∏è Cliente fidelizado a um operador INATIVO. Atribuindo para supervis√£o.\nüë§ Operador: ${operator.NOME} (${operator.CODIGO})\nüìã Cliente: ${customer.NOME} (${customer.CODIGO})'
     ),
     NULL, NULL, TRUE,
     'FINAL - Atribui para supervis√£o (operador inativo)',
     NOW(), NOW());

SELECT '  ‚úì Step 11: FINAL - Operador inativo' as status;

-- ===== STEP 12: FINAL - Sem cliente vinculado =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'ASSIGN', 12,
     JSON_OBJECT(
       'userId', -1,
       'priority', 'LOW',
       'systemMessage', '‚ùì Contato sem cliente vinculado. Atribuindo para supervis√£o.\nüì± Contato: ${contact.pushName} (${contact.remoteJid})'
     ),
     NULL, NULL, TRUE,
     'FINAL - Atribui para supervis√£o (sem cliente)',
     NOW(), NOW());

SELECT '  ‚úì Step 12: FINAL - Sem cliente' as status;

-- ===== STEP 13: Buscar usu√°rio dispon√≠vel ou supervis√£o =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'CHECK_AVAILABLE_USERS', 13,
     JSON_OBJECT(),
     NULL, 16, TRUE,
     'Busca usu√°rio dispon√≠vel no setor (sem fideliza√ß√£o)',
     NOW(), NOW());

SELECT '  ‚úì Step 13: Busca usu√°rio dispon√≠vel' as status;

-- ===== STEP 16: FINAL - Fallback supervis√£o =====
INSERT INTO message_flows_steps 
    (message_flow_id, type, step_number, config, next_step_id, fallback_step_id, enabled, description, created_at, updated_at)
VALUES
    (@flow_id, 'ASSIGN', 16,
     JSON_OBJECT(
       'userId', -1,
       'priority', 'NORMAL',
       'systemMessage', 'üë• Cliente sem fideliza√ß√£o v√°lida e nenhum usu√°rio dispon√≠vel. Atribuindo para supervis√£o.\nüìã Cliente: ${customer.NOME} (${customer.CODIGO})'
     ),
     NULL, NULL, TRUE,
     'FINAL - Fallback para supervis√£o',
     NOW(), NOW());

SELECT '  ‚úì Step 16: FINAL - Fallback supervis√£o' as status;

-- ===== COMMIT DA TRANSA√á√ÉO =====
COMMIT;

-- ===== RESUMO FINAL =====
SELECT '‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê' as status
UNION ALL SELECT '‚úÖ FLUXO KARSTEN CRIADO COM SUCESSO!'
UNION ALL SELECT '‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê'
UNION ALL SELECT CONCAT('ID do Fluxo:     ', @flow_id)
UNION ALL SELECT CONCAT('Instance:        ', @p_instance)
UNION ALL SELECT CONCAT('Setor:           ', @p_sector_id)
UNION ALL SELECT 'Total de Steps:  14'
UNION ALL SELECT '‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê'
UNION ALL SELECT ''
UNION ALL SELECT 'üìå Estrutura do Fluxo:'
UNION ALL SELECT '  [1] CONDITION  ‚Üí Verifica customerId'
UNION ALL SELECT '  [2] QUERY      ‚Üí Busca dados do cliente'
UNION ALL SELECT '  [3] CONDITION  ‚Üí Verifica tipo INAT'
UNION ALL SELECT '  [4] CONDITION  ‚Üí Verifica fideliza√ß√£o'
UNION ALL SELECT '  [5] CONDITION  ‚Üí Verifica REPRESENTANTE (-2)'
UNION ALL SELECT '  [6] CONDITION  ‚Üí Verifica AGENDA P√öBLICA (0)'
UNION ALL SELECT '  [14] QUERY     ‚Üí Busca dados do operador'
UNION ALL SELECT '  [15] CONDITION ‚Üí Verifica operador ATIVO'
UNION ALL SELECT '  [7] ASSIGN     ‚Üí FINAL - Fidelizado v√°lido'
UNION ALL SELECT '  [8] ASSIGN     ‚Üí FINAL - Cliente inativo'
UNION ALL SELECT '  [9] ASSIGN     ‚Üí FINAL - Representante'
UNION ALL SELECT '  [10] ASSIGN    ‚Üí FINAL - Agenda p√∫blica'
UNION ALL SELECT '  [11] ASSIGN    ‚Üí FINAL - Operador inativo'
UNION ALL SELECT '  [12] ASSIGN    ‚Üí FINAL - Sem cliente'
UNION ALL SELECT '  [13] CHECK_AVAILABLE_USERS ‚Üí Busca dispon√≠vel'
UNION ALL SELECT '  [16] ASSIGN    ‚Üí FINAL - Fallback supervis√£o'
UNION ALL SELECT ''
UNION ALL SELECT 'üéØ Pr√≥ximos passos:'
UNION ALL SELECT '  1. Ajuste @p_instance e @p_sector_id se necess√°rio'
UNION ALL SELECT '  2. Teste o fluxo com diferentes cen√°rios'
UNION ALL SELECT '  3. Monitore m√©tricas na tabela message_flow_metrics';

-- ===== CONSULTAS √öTEIS =====

-- Ver o fluxo criado
SELECT 
    mf.id,
    mf.instance,
    mf.sector_id,
    mf.name,
    mf.description,
    COUNT(mfs.id) as total_steps,
    mf.created_at
FROM message_flows mf
LEFT JOIN message_flows_steps mfs ON mf.id = mfs.message_flow_id
WHERE mf.id = @flow_id
GROUP BY mf.id, mf.instance, mf.sector_id, mf.name, mf.description, mf.created_at;

-- Ver todos os steps do fluxo criado
SELECT 
    mfs.step_number,
    mfs.type,
    mfs.description,
    mfs.enabled,
    mfs.next_step_id,
    mfs.fallback_step_id,
    JSON_PRETTY(mfs.config) as config
FROM message_flows_steps mfs
WHERE mfs.message_flow_id = @flow_id
ORDER BY mfs.step_number;
